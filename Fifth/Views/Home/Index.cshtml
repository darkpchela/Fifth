@{
    ViewData["Title"] = "Main Page";
}
@model GameSessionVM
<div class="col-2 float-left">
    <div class="text-center">
        <h3 class="text-monospace text-warning">Tags</h3>
    </div>
    <div class="p-2  tags-cloud bg-secondary border border-warning rounded">
        <div id="tagsCloud" class="d-flex flex-row flex-wrap justify-content-center">
            <a href="" data-selected="0" class="tag">#tag</a>
        </div>
    </div>
</div>

<div class="col-2 float-right">
    <div class="text-center">
        <h3 class="text-monospace text-warning">Filter</h3>
    </div>
    <div class="p-2  tags-cloud bg-secondary border border-warning rounded">
        <div id="tagsFilter" class="d-flex flex-row flex-wrap justify-content-center">
        </div>
    </div>
</div>

<div id="gamesTable" class="col-8 offset-2">
</div>

<div id="modal" class="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered text-warning">
        <div id="modalContent" class="modal-content bg-secondary border border-warning rounded">
            <div class="modal-header">
                <h4 class="modal-title">New game</h4>
                <a href="#" class="btn text-white bg-dark btn-lg close" rel="modal:close"
                   aria-hidden="true">&times;</a>
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                await Html.RenderPartialAsync("_CreateGame");
            }
            else
            {
                <div>
                    <div class="modal-body d-flex flex-column justify-content-center">
                        <h5>Please, authorize to create a game!</h5>
                        <a asp-action="SignIn" asp-controller="Account" class="btn text-warning bg-dark btn-lg ">Sign In</a>
                        <a asp-action="SignUp" asp-controller="Account" class="btn text-warning bg-dark btn-lg ">Sign Up</a>
                    </div>
                    <div class="modal-footer">
                        <a href="#" class="btn text-warning bg-dark btn-lg " rel="modal:close">Close</a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<button id="sendBtn">Test</button>

@section Scripts{
    <script src="~/lib/tagify/tagify.min.js"></script>
    <script src="~/lib/tagify/jQuery.tagify.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-modal/0.9.1/jquery.modal.min.js"></script>
    <script @*src="~/js/index.js"*@>
        //const updateReferences = () => {

        //    $('#newGame').click((e) => {
        //        e.preventDefault();
        //        $('#modal').modal('show');
        //    })
        //}
    </script>
    <script>



        const goToGame = id => window.replace(`Home/Game/${id}`)

        const updateTable = () => {
            $.ajax({
                type: "GET",
                url: "Home/_GamesTable",
                success: data => {
                    $('#gamesTable').empty();
                    $('#gamesTable').append(data);
                    $('#newGame').click((e) => {
                        e.preventDefault();
                        $('#modal').modal('show');
                    });
                }
            });
        };

        $(updateTable());

        $('#btnCreate').click(e => {
            e.preventDefault();
            let data = $('#createForm').serialize();
            $.ajax({
                type: "post",
                url: "Home/CreateGame",
                data: data,
                success: data => {
                    if (data.id != undefined) {
                        $('#modal').modal('close')
                    }
                    else {
                        $('#modalContent').empty();
                        $('#modalContent').append(data);
                    }
                }
            });
        })
    </script>
    <script>
        function addCard(data) {
            let cardElem = $('#cardPrototype').clone();
            cardElem.removeAttr('id');
            cardElem.attr("data-id", data.id)
            $(cardElem).find('[name="game"]').text(data.name);
            $(cardElem).find('[name="user"]').text(data.userName);
            $(cardElem).find('[name="ref"]').prop('href', `/Home/Game/${data.id}`)
            cardElem.prop('hidden', false);
            $('#gameCards').append(cardElem);
        };


        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/MainHub")
            .build();

        hubConnection.on("Test", function (data) {
            console.log(data);
        });

        hubConnection.on("OnGameStartedOrClosed", id => {
            console.log(`Game ${id} closed!`);
            alert($(`#gameCards div[data-id="${id}"]`).length);
            $(`#gameCards div[data-id="${id}"]`).remove();
        });

        hubConnection.on("OnGameCreated", gameVm => {
            console.log("Created");
            addCard(gameVm);
        });

        hubConnection.start();
    </script>
<script>
    let tagify;
    let input = document.querySelector('#tagsInput');
    if (input) {
        tagify = new Tagify(input, {
            whitelist: [],
            maxTags: 10,
            dropdown: {
                maxItems: 20,           
                classname: "tags-look", 
                enabled: 0,             
                closeOnSelect: false    
            }
        })
        tagify.settings.whitelist.splice(0, 2, { value: 'a', id: 0 }, 'b');
    }

</script>
}